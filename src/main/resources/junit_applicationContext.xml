<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/flex
                           http://www.springframework.org/schema/flex/spring-flex-1.0.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">


	<!-- 
    <ehcache:annotation-driven create-missing-caches="true" />
    

    <ehcache:config cache-manager="cacheManager">
        <ehcache:evict-expired-elements interval="60" />
    </ehcache:config>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:config/ehcache.xml" />
    </bean>
    -->
	
	<!-- Configures support for @Controllers -->
	<mvc:annotation-driven />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>
	<context:component-scan base-package="com.ultrapower.flowmanage.modules" />
	<context:annotation-config />

	<import resource="classpath:bean_mybatis.xml" />
<!-- 	<import resource="classpath:config/spring-flex.xml"/> -->
	
	<import resource="classpath:com/ultrapower/flowmanage/modules/health/bean/bean.xml" />
	<import resource="classpath:com/ultrapower/flowmanage/modules/flow/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/quality/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/hotspotResource/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/internetResources/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/busiBenchmark/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/wlanLogAnalyse/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/xdrAnalyse/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/portVideoBiz/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/internetResAnalyse/bean/bean.xml"/>
	<import resource="classpath:com/ultrapower/flowmanage/modules/keyIndexSurvey/bean/bean.xml"/>
	
<!-- 
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<property name="hostName" value="${redis.pool.host}"></property>
		<property name="port" value="${redis.pool.port}"></property>
				<property name="password" value="${redis.pool.pass}"></property>
		<property name="timeout" value="${redis.pool.timeout}"></property>
		<property name="usePool" value="true"></property>
	</bean>

	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
		<property name="KeySerializer">
		     <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
		</property>
		<property name="HashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>  
		<property name="HashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
		</property>
	</bean>
	
	<bean id="initCache" class="com.ultrapower.flowmanage.modules.redis.InitCache" scope="singleton" init-method="init"/> 
 -->
</beans>